{"version":3,"sources":["components/MenuList.js","components/Menu.js","App.js","reportWebVitals.js","index.js"],"names":["MenuList","listItems","setListItems","className","map","item","index","onClick","isShowing","handleShowItem","name","value","Menu","useState","showMenu","setShowMenu","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OA4BeA,EA1BE,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,aAO1B,OACA,qBAAKC,UAAU,OAAf,SACI,qBAAKA,UAAU,iBAAf,SACKF,EAAUG,KAAI,SAACC,EAAMC,GAClB,OAAO,sBAAKH,UAAU,YAAf,UACH,sBAAKA,UAAU,aAAf,UACA,yBAAQI,QAAS,kBAXV,SAACF,EAAKC,GACzBL,EAAUK,GAAV,2BAAuBD,GAAvB,IAA6BG,WAAYH,EAAKG,YAC9CN,EAAa,YAAID,IASkBQ,CAAeJ,EAAKC,IAA3C,cAAqDD,EAAKG,UAAW,IAAM,IAA3E,OACA,qCAAQH,EAAKK,KAAb,UAECL,EAAKG,WAAaP,EAAUK,GAAOK,MAAMP,KAAI,SAACC,GAC3C,OAAO,sBAAKF,UAAU,OAAf,cAAwBE,EAAxB,qBCsBhBO,EAtCF,WAET,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEA,EAAiCF,mBAAS,CAC1C,CACIH,KAAM,SACNF,WAAW,EACXG,MAAO,CAAC,SAAS,SAAS,WAE9B,CACID,KAAM,SACNF,WAAW,EACXG,MAAO,CAAC,SAAS,SAAS,WAE9B,CACID,KAAM,SACNF,WAAW,EACXG,MAAO,CAAC,SAAS,SAAS,aAd9B,mBAAOV,EAAP,KAAiBC,EAAjB,KAuBA,OACI,sBAAKC,UAAU,YAAf,UACI,sBAAKA,UAAU,OAAf,UACI,sBAAKA,UAAU,WAAf,cAA2B,yBAAQI,QARxB,WACrBQ,GAAaD,IAOwB,cAAmCA,EAAU,IAAM,IAAnD,OAA3B,OACA,sBAAKX,UAAU,WAAf,cAA2B,0CAA3B,UAEHW,GAAY,cAAC,EAAD,CAAUb,UAAYA,EAAWC,aAAeA,EAAcY,SAAUA,QCvBlFE,MATf,WAEE,OACE,qBAAKb,UAAU,MAAf,SACE,cAAC,EAAD,OCISc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.86e0ae59.chunk.js","sourcesContent":["import { useState } from \"react\"\r\n\r\nconst MenuList = ({listItems, setListItems}) => {\r\n\r\n    const handleShowItem = (item,index) => {\r\n        listItems[index] = {...item, isShowing: !item.isShowing}\r\n        setListItems([...listItems])\r\n    }\r\n\r\n    return ( \r\n    <div className=\"list\">\r\n        <div className=\"grid-container\">\r\n            {listItems.map((item, index) => {\r\n                return <div className=\"grid-item\">\r\n                    <div className=\"list-items\">\r\n                    <button onClick={() => handleShowItem(item,index)}> {item.isShowing? '-' : '+'} </button>\r\n                    <text> {item.name} </text>\r\n                    </div>\r\n                    {item.isShowing && listItems[index].value.map((item) => {\r\n                        return <div className=\"item\"> {item} </div>\r\n                    })}\r\n                </div>\r\n            })}\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n \r\nexport default MenuList;","import MenuList from \"./MenuList\"\r\nimport { useState } from \"react\"\r\n\r\nconst Menu = () => {\r\n\r\n    const [showMenu, setShowMenu] = useState(false)\r\n\r\n    const [listItems,setListItems] = useState([\r\n    {\r\n        name: 'list 1',\r\n        isShowing: false,\r\n        value: ['item 1','item 2','item 3']\r\n    },\r\n    {\r\n        name: 'list 2',\r\n        isShowing: false,\r\n        value: ['item 4','item 5','item 6']\r\n    },\r\n    {\r\n        name: 'list 3',\r\n        isShowing: false,\r\n        value: ['item 7','item 8','item 9']\r\n    }\r\n])\r\n  \r\n    const handleShowMenu = () => { \r\n      setShowMenu(!showMenu)\r\n\r\n    }\r\n\r\n    return ( \r\n        <div className=\"container\">\r\n            <div className=\"menu\">\r\n                <div className=\"dropdown\"> <button onClick={handleShowMenu}> {showMenu? '-' : '+'} </button> </div> \r\n                <div className=\"menuName\"> <text> Menu </text> </div>  \r\n            </div>\r\n            {showMenu && <MenuList listItems= {listItems} setListItems= {setListItems} showMenu={showMenu}/>}\r\n      </div>\r\n     );\r\n}\r\n \r\nexport default Menu;","import './App.scss';\nimport { useEffect, useState } from 'react';\nimport Menu from './components/Menu';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Menu />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}